x../smit l function echo find env nta dir bhal had l function 
but just o check watch env name kayn 
ila kan seft lia env_list->name
ila makanch print new line testi echo d bash o chof


UPDATE 

You already assign env variables inside ft_echo, ghir heyedha,
i handled them f commented function f minishell.c
btw dont worry about env_list f lmain, 
i had to do dik rwina to fix wahd lblan m3a lheader hta n3wd lik

// check_quotes seg faults at this test: echo '"'"'"'"'ana      'ss"'"'"'"' fgdfg 
ill fix it tomorrow

// ft_handle_quotes breaks too in some tests, i know what the issue is, will be fixed tomorrow
echo '"'hi"wheoq""@'"
echo '"'"'"'"'ana      'ss"'"'"'"' fgdfg
echo "'"hello"''"'"'hi"wheoq""@'"


echo '$HOME'   should print $HOME
echo "$HOME"   should print /Users/mbaioumy
echo $HO"ME"   should print  ME
echo $"HOME"    should print HOME
echo "'$HOME'"	should print '/Users/mbaioumy'
echo '"$HOME"'	should print "$HOME"	


********************************************************************

UPDATE

the only test not working yet, i know where the issue is, echo $HO"ME"   should print  ME


REDIR UPDATE

fixed the issue with both files in the same string, they\'re seperated now
and null terminated, there\'s a seg fault from your side idk why


REDIR UPDATE #2

Added ft_redir_test to test trees with redirs, touched a bit of your code on
ft_redir just to silence some errors,
i tested the function doesn't bug or seg faults,
check from your part if its working properly
uncomment ft_check_cmd on the main, and the normal function if it doesnt work.

REDIR UPDATE #3

multiple redirections are now working but only if they re from the same type
Im still thinking of a solution
we have problems in tests:

/*****FIX THIS*******/
<a cat <b <c only the content of c should be displayed
<a cat <b <c (b) doesnt exist so nothing is displayed and an error shows
cat <> a only the input redir works the output redir is ignored
ls > < a syntax error


also echo $? isnt working I think cuz kat7ssbo mea echo $VARIABLE check if mn be3d $ kayna ? o seft lia
hakak l argument I dealt with it f whd function

and the heredoc needs to be detected and executed first f lparsing so take my function o execute
it men eandk
you need to parse the delimiter for heredoc
minishell goes a bit crazy after using heredoc

UPDATE:
fixed the execution in heredoc but it turns out that when heredoc closes you parse the command 
alone again so it things get executed two times
seg fault in (< <) delimiter tests
After the (fixed heredoc maybe ?) u made a mistake in some function f parsing now < redirections are not working
echo $$segfaults
$ENVVARIABLE segfaults
| seg faults
among us redirections (ls > $VAR) (if env variable )
seg faults in "<" and ">" input

***************'

fixed some stuff we had wrong with handling the string overall (quotes and env)
the function isnt perfect yet test like echo $USER"$USER" dont work i know why, just too tired to fix it
you'll notice how fast this one is
if shit hits the fan comment it at parser.c::102 and uncomment the line before it

i still cant figure out why the commands execute twice

NB: I have a spaces problem with export 
example:
export VAR="la la" jsut parse "la la" like this to me
export VAR="la     la la   " same for this  
you need to expand inputs like $PWD or $USER etc without echo and send them to me



I fixed everything related to envs and quotes if there are some tests not working leave them here for me
blan redirections and command executing twice ghadi ichofo m3aya saad tomorrow, deja gltha lih

A test related to envs not working when I export a new a variable and attempt to expand
it like ($NEWVAR) it seg faults
(ls |) seg faults wtf
("") seg faults too
""cmd" seg faults   "
"'cmd'" seg faults
question: did u only handle quotes for echo ?! all the seg faults lead to the 
ultimate function



///****************

-ENV UPDATE: FIXED

Fixed everything related to dollars and quotes (for real this time i hope)
ba9i one thing tho
these tests dont work:

echo $$USER output -> 10652USER
echo $$$USER output -> 10652mbaioumy
echo $$$$USER output -> 1065210652USER
echo $$$$$USER output -> 1065210652mbaioumy

when $ are divisable by 2 it doesn\'t get assigned if its the opposite,
it gets assigned.
dont\'t worry about the numbers they are just pids of the process we in
normally it should get treated like echo $$ which outputs nothing
but wait it gets crazier

echo $$$$$"USER" -> 1065210652$USER
echo $$$$$'USER' -> 1065210652USER
echo $$$$"$USER" -> 1065210652mbaioumy

its kinda like quotes logic but the first test fchkel af

-HEREDOC UPDATE:

i changed where and when to parse the heredoc, put it back with redirections,
it still segfaults when i run it, i checked it on my side, everything is parsed
saad checked too gal its from your side but we\'ll see tomorrow

NB: didn\'t forget about redirections just wanna get had lbsala over with

SEG FAULTS UPDATE:
"ls          -la" segfaults see bash tests (and test more of tests similar to this one)
echodsjjds "hello" (works as if its echo wtf )
export var="la la" (you send me NULL string)
" " seg faults
\" \' seg faults

UPDATE

the seg faults above are fixed but there is an issue with the following type of tests:
export var="la la" (test 1)
or anything like it
idk whether you should receive the argument quoted or not
if i\'m passing VAR="hi" to export, you receive VAR=hi, makes total sense
but in the case of test 1 idk whether you should receive var="la la" or var=la la
for now you get them unquoted cause export works
so you should fix blan receiving var=la la cause im getting this export error

export: not valid in this context

try different tests, the outputs cmd: and split 0 & 1 will show you how it was parsed

HEREDOC UPDATE

the issue was trying to execute the heredoc mid parsing, the solution is
parsing the heredoc with redirects, ill send you the redir node with HEREDOC as mode
and 0 in fd, the delimiter in "*q", check it on ft_redir and call ft_heredoc
and we should change the tree to a normal node as it was before cause dak lblan li kan kiw93
is fixable. 


export var="la $la" (ignore la)
export var="ls -la" and then $var khass t executa ls -la
export var="" and then env seg faults


we have a problem f multiple heredocs and multiple pipes stopped working for some reason,
removed some leaks

********************************************************

UPDATE REDIR

the node now is simple, check file for the name of the file and fd for the
convenient fd to the redirection, you just need to modify your function
(file name is already split)


************************************
UPDATE


Fixed the tests you sent me, the <> and >< cases are treated as syntax errors
saad didnt even handle them


problem with "ls" -la it outputs cmd not found 